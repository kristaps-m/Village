// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Village.Data;

#nullable disable

namespace Village.Data.Migrations
{
    [DbContext(typeof(VillageDbContext))]
    [Migration("20230331202115_HouseApartment-ApartmentInhabitant")]
    partial class HouseApartmentApartmentInhabitant
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Village.Core.Models.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<double>("FullArea")
                        .HasColumnType("float");

                    b.Property<int>("IdOfHouse")
                        .HasColumnType("int");

                    b.Property<double>("LivingSpace")
                        .HasColumnType("float");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Apartments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Floor = 3,
                            FullArea = 74.5,
                            IdOfHouse = 1,
                            LivingSpace = 70.5,
                            Number = 21,
                            NumberOfRooms = 3,
                            Population = 3
                        },
                        new
                        {
                            Id = 2,
                            Floor = 2,
                            FullArea = 54.5,
                            IdOfHouse = 1,
                            LivingSpace = 50.5,
                            Number = 44,
                            NumberOfRooms = 2,
                            Population = 3
                        },
                        new
                        {
                            Id = 3,
                            Floor = 2,
                            FullArea = 54.5,
                            IdOfHouse = 1,
                            LivingSpace = 50.5,
                            Number = 40,
                            NumberOfRooms = 2,
                            Population = 3
                        },
                        new
                        {
                            Id = 4,
                            Floor = 12,
                            FullArea = 100.5,
                            IdOfHouse = 2,
                            LivingSpace = 95.5,
                            Number = 111,
                            NumberOfRooms = 4,
                            Population = 3
                        },
                        new
                        {
                            Id = 5,
                            Floor = 99,
                            FullArea = 150.5,
                            IdOfHouse = 2,
                            LivingSpace = 140.5,
                            Number = 199,
                            NumberOfRooms = 5,
                            Population = 1
                        });
                });

            modelBuilder.Entity("Village.Core.Models.ApartmentInhabitant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int>("InhabitantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApartmentInhabitants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApartmentId = 1,
                            InhabitantId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApartmentId = 1,
                            InhabitantId = 2
                        },
                        new
                        {
                            Id = 3,
                            ApartmentId = 2,
                            InhabitantId = 3
                        },
                        new
                        {
                            Id = 4,
                            ApartmentId = 3,
                            InhabitantId = 4
                        });
                });

            modelBuilder.Entity("Village.Core.Models.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Riga",
                            Country = "Latvia",
                            Number = 901,
                            Postcode = "LV - 2023",
                            Street = "Brivibas"
                        },
                        new
                        {
                            Id = 2,
                            City = "Riga",
                            Country = "Latvia",
                            Number = 777,
                            Postcode = "LV - 2020",
                            Street = "Ulmana"
                        });
                });

            modelBuilder.Entity("Village.Core.Models.HouseApartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HouseApartments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApartmentId = 1,
                            HouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApartmentId = 2,
                            HouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            ApartmentId = 3,
                            HouseId = 1
                        },
                        new
                        {
                            Id = 4,
                            ApartmentId = 4,
                            HouseId = 2
                        },
                        new
                        {
                            Id = 5,
                            ApartmentId = 5,
                            HouseId = 2
                        });
                });

            modelBuilder.Entity("Village.Core.Models.Inhabitant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdOfApartment")
                        .HasColumnType("int");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inhabitants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1980, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Andris@gmail.com",
                            IdOfApartment = 1,
                            IsOwner = true,
                            Lastname = "Berzins",
                            Name = "Andris",
                            PersonalCode = "220180-111222",
                            Phone = "+371 21234567"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2003, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Anna@gmail.com",
                            IdOfApartment = 1,
                            IsOwner = false,
                            Lastname = "Liepkalne",
                            Name = "Anna",
                            PersonalCode = "241203-111222",
                            Phone = "+371 22234567"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Madarss@gmail.com",
                            IdOfApartment = 2,
                            IsOwner = false,
                            Lastname = "Ozols",
                            Name = "Madars",
                            PersonalCode = "010180-111222",
                            Phone = "+371 23234567"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1980, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Garkakle.Linda@gmail.com",
                            IdOfApartment = 3,
                            IsOwner = false,
                            Lastname = "Garkakle",
                            Name = "Linda",
                            PersonalCode = "220280-111222",
                            Phone = "+371 21234567"
                        });
                });

            modelBuilder.Entity("Village.Core.Models.InhabitantApartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int>("InhabitantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InhabitantApartments");
                });
#pragma warning restore 612, 618
        }
    }
}
